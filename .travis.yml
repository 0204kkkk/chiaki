
language: cpp

matrix:
  include:
    - os: linux
      dist: bionic
      addons:
        apt:
          sources:
            - sourceline: "ppa:beineri/opt-qt-5.12.0-bionic"
          packages:
            - libprotoc-dev
            - protobuf-compiler
            - python3-protobuf
            - libopus-dev
            - qt512base
            - qt512multimedia
            - qt512gamepad
            - qt512svg
            - libgl1-mesa-dev
            - libavcodec-dev
            - libavcodec-extra
      env:
        - CMAKE_PREFIX_PATH="/opt/qt512"
        - CMAKE_EXTRA_ARGS="-DCMAKE_INSTALL_PREFIX=/usr"
        - DEPLOY_FILE="Chiaki-x86_64.AppImage"
      after_success:
        - make install DESTDIR=../appdir
        - cd ..
        - wget https://github.com/linuxdeploy/linuxdeploy-plugin-qt/releases/download/continuous/linuxdeploy-x86_64.AppImage && chmod +x linuxdeploy-x86_64.AppImage
        - wget https://github.com/linuxdeploy/linuxdeploy-plugin-qt/releases/download/continuous/linuxdeploy-plugin-qt-x86_64.AppImage && chmod +x linuxdeploy-plugin-qt-x86_64.AppImage
        - source /opt/qt512/bin/qt512-env.sh
        - ./linuxdeploy-x86_64.AppImage --appdir=appdir -e appdir/usr/bin/chiaki -d appdir/usr/share/applications/chiaki.desktop --plugin qt --output appimage
        - mv Chiaki-*-x86_64.AppImage Chiaki-x86_64.AppImage

    - os: osx
      osx_image: xcode11
      addons:
        homebrew:
          packages:
            - qt
            - opus
            - openssl@1.1
            - ffmpeg
      env:
        - CMAKE_PREFIX_PATH="/usr/local/opt/openssl@1.1;/usr/local/opt/qt"
        - CMAKE_EXTRA_ARGS=""
        - DEPLOY_FILE="""

script:
  - mkdir build && cd build
  - cmake
      -DCMAKE_BUILD_TYPE=Release
      -DCMAKE_PREFIX_PATH=$CMAKE_PREFIX_PATH
      -DCHIAKI_ENABLE_TESTS=ON
      -DCHIAKI_ENABLE_CLI=OFF
      -DCHIAKI_GUI_ENABLE_QT_GAMEPAD=ON
      $CMAKE_EXTRA_ARGS
      ..
  - make -j4
  - test/chiaki-unit

